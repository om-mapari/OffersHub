version: '3'

services:
  postgres-offer-db:
    image: postgres:15-alpine
    container_name: offer-management-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: omom
      POSTGRES_DB: offer_management
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - offer-network
    restart: unless-stopped

  backend-apis:
    build:
      context: ./backend-apis
      dockerfile: Dockerfile.prod
    container_name: offer-management-api
    environment:
      DATABASE_URL: postgresql://postgres:omom@postgres-offer-db:5432/offer_management
      SECRET_KEY: your_secret_key_here
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      AZURE_ENDPOINT: ${AZURE_ENDPOINT:-https://bh-in-openai-synapsesynergy.openai.azure.com/}
      AZURE_API_KEY: ${AZURE_API_KEY:-1234567890}
      AZURE_API_VERSION: ${AZURE_API_VERSION:-2024-12-01-preview}
      AZURE_DEPLOYMENT: ${AZURE_DEPLOYMENT:-gpt-4o-3}
    ports:
      - "8000:8000"
    depends_on:
      postgres-offer-db:
        condition: service_healthy
    networks:
      - offer-network
    restart: unless-stopped

  frontend-app:
    build:
      context: ./frontend-app
      dockerfile: Dockerfile.prod
    container_name: frontend-app
    ports:
      - "3000:3000"
    environment:
      # Define production environment variables for the frontend here
      - VITE_API_BASE_URL=http://135.13.8.201:8000/api/v1
    restart: unless-stopped
    depends_on:
      - backend-apis
    networks:
      - offer-network

volumes:
  postgres-data:

networks:
  offer-network:
    driver: bridge