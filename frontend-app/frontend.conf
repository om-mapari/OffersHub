# Frontend server configuration
server {
    # Listen on port 3000
    listen 3000;

    # Root directory to serve files
    root /usr/share/nginx/html;

    # Default index file
    index index.html;

    # Test API endpoint
    location = /api-test {
        default_type application/json;
        return 200 '{"status": "success", "message": "API proxy is working"}';
    }

    # Proxy API requests to the backend service
    location /api/v1/ {
        # Use the backend container name for internal Docker network communication
        proxy_pass http://backend-apis:8000/api/v1/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
    }

    # Handle tenant-specific API requests
    location ~ ^/tenants/([^/]+)/(.*)$ {
        proxy_pass http://backend-apis:8000/api/v1/tenants/$1/$2;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
    }

    # Handle user-specific API requests
    location ~ ^/users/(.*)$ {
        proxy_pass http://backend-apis:8000/api/v1/users/$1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
    }

    # SPA behavior: redirect all other routes to index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Enable gzip compression for static assets
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Add caching headers for static assets but not for the index.html
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Handle 404 errors (optional fallback to the SPA)
    error_page 404 /index.html;
}