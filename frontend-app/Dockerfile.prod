# Stage 1: Build the application
FROM node:20-alpine AS builder

# Set the working directory
WORKDIR /app

# Install pnpm and dependencies
RUN npm install -g pnpm
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# Copy the rest of the application files
COPY . .

# Build the app for production with the production environment
RUN pnpm run build -- --mode production

# Stage 2: Serve the built files using nginx
FROM nginx:alpine

# Install gettext for envsubst utility
RUN apk add --no-cache gettext

# Set nginx working directory
WORKDIR /usr/share/nginx/html

# Copy the built files from the builder stage
COPY --from=builder /app/dist .

# Copy nginx configuration
COPY frontend.conf /etc/nginx/conf.d/default.conf

# Create a script to replace environment variables in the main.js file at runtime
COPY --from=builder /app/env-config.sh /docker-entrypoint.d/40-env-config.sh
RUN chmod +x /docker-entrypoint.d/40-env-config.sh

# Expose the production port
EXPOSE 3000

# Start nginx
CMD ["nginx", "-g", "daemon off;"]