/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedUsersRouteImport } from './routes/_authenticated/users/route'
import { Route as AuthenticatedTenantsRouteImport } from './routes/_authenticated/tenants/route'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedOffersRouteImport } from './routes/_authenticated/offers/route'
import { Route as AuthenticatedCampaignsRouteImport } from './routes/_authenticated/campaigns/route'
import { Route as AuthenticatedUsersIndexImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedTenantsIndexImport } from './routes/_authenticated/tenants/index'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedOffersIndexImport } from './routes/_authenticated/offers/index'
import { Route as AuthenticatedCampaignsIndexImport } from './routes/_authenticated/campaigns/index'
import { Route as AuthenticatedSettingsNotificationsImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsAppearanceImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountImport } from './routes/_authenticated/settings/account'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsersRouteRoute = AuthenticatedUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedTenantsRouteRoute = AuthenticatedTenantsRouteImport.update({
  id: '/tenants',
  path: '/tenants',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSettingsRouteRoute = AuthenticatedSettingsRouteImport.update(
  {
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedOffersRouteRoute = AuthenticatedOffersRouteImport.update({
  id: '/offers',
  path: '/offers',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedCampaignsRouteRoute =
  AuthenticatedCampaignsRouteImport.update({
    id: '/campaigns',
    path: '/campaigns',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedUsersRouteRoute,
} as any)

const AuthenticatedTenantsIndexRoute = AuthenticatedTenantsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedTenantsRouteRoute,
} as any)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any,
)

const AuthenticatedOffersIndexRoute = AuthenticatedOffersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedOffersRouteRoute,
} as any)

const AuthenticatedCampaignsIndexRoute =
  AuthenticatedCampaignsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedCampaignsRouteRoute,
  } as any)

const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/campaigns': {
      id: '/_authenticated/campaigns'
      path: '/campaigns'
      fullPath: '/campaigns'
      preLoaderRoute: typeof AuthenticatedCampaignsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/offers': {
      id: '/_authenticated/offers'
      path: '/offers'
      fullPath: '/offers'
      preLoaderRoute: typeof AuthenticatedOffersRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/tenants': {
      id: '/_authenticated/tenants'
      path: '/tenants'
      fullPath: '/tenants'
      preLoaderRoute: typeof AuthenticatedTenantsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users': {
      id: '/_authenticated/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/campaigns/': {
      id: '/_authenticated/campaigns/'
      path: '/'
      fullPath: '/campaigns/'
      preLoaderRoute: typeof AuthenticatedCampaignsIndexImport
      parentRoute: typeof AuthenticatedCampaignsRouteImport
    }
    '/_authenticated/offers/': {
      id: '/_authenticated/offers/'
      path: '/'
      fullPath: '/offers/'
      preLoaderRoute: typeof AuthenticatedOffersIndexImport
      parentRoute: typeof AuthenticatedOffersRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/tenants/': {
      id: '/_authenticated/tenants/'
      path: '/'
      fullPath: '/tenants/'
      preLoaderRoute: typeof AuthenticatedTenantsIndexImport
      parentRoute: typeof AuthenticatedTenantsRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof AuthenticatedUsersIndexImport
      parentRoute: typeof AuthenticatedUsersRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedCampaignsRouteRouteChildren {
  AuthenticatedCampaignsIndexRoute: typeof AuthenticatedCampaignsIndexRoute
}

const AuthenticatedCampaignsRouteRouteChildren: AuthenticatedCampaignsRouteRouteChildren =
  {
    AuthenticatedCampaignsIndexRoute: AuthenticatedCampaignsIndexRoute,
  }

const AuthenticatedCampaignsRouteRouteWithChildren =
  AuthenticatedCampaignsRouteRoute._addFileChildren(
    AuthenticatedCampaignsRouteRouteChildren,
  )

interface AuthenticatedOffersRouteRouteChildren {
  AuthenticatedOffersIndexRoute: typeof AuthenticatedOffersIndexRoute
}

const AuthenticatedOffersRouteRouteChildren: AuthenticatedOffersRouteRouteChildren =
  {
    AuthenticatedOffersIndexRoute: AuthenticatedOffersIndexRoute,
  }

const AuthenticatedOffersRouteRouteWithChildren =
  AuthenticatedOffersRouteRoute._addFileChildren(
    AuthenticatedOffersRouteRouteChildren,
  )

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedTenantsRouteRouteChildren {
  AuthenticatedTenantsIndexRoute: typeof AuthenticatedTenantsIndexRoute
}

const AuthenticatedTenantsRouteRouteChildren: AuthenticatedTenantsRouteRouteChildren =
  {
    AuthenticatedTenantsIndexRoute: AuthenticatedTenantsIndexRoute,
  }

const AuthenticatedTenantsRouteRouteWithChildren =
  AuthenticatedTenantsRouteRoute._addFileChildren(
    AuthenticatedTenantsRouteRouteChildren,
  )

interface AuthenticatedUsersRouteRouteChildren {
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
}

const AuthenticatedUsersRouteRouteChildren: AuthenticatedUsersRouteRouteChildren =
  {
    AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
  }

const AuthenticatedUsersRouteRouteWithChildren =
  AuthenticatedUsersRouteRoute._addFileChildren(
    AuthenticatedUsersRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedCampaignsRouteRoute: typeof AuthenticatedCampaignsRouteRouteWithChildren
  AuthenticatedOffersRouteRoute: typeof AuthenticatedOffersRouteRouteWithChildren
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedTenantsRouteRoute: typeof AuthenticatedTenantsRouteRouteWithChildren
  AuthenticatedUsersRouteRoute: typeof AuthenticatedUsersRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedCampaignsRouteRoute:
    AuthenticatedCampaignsRouteRouteWithChildren,
  AuthenticatedOffersRouteRoute: AuthenticatedOffersRouteRouteWithChildren,
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedTenantsRouteRoute: AuthenticatedTenantsRouteRouteWithChildren,
  AuthenticatedUsersRouteRoute: AuthenticatedUsersRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/campaigns': typeof AuthenticatedCampaignsRouteRouteWithChildren
  '/offers': typeof AuthenticatedOffersRouteRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/tenants': typeof AuthenticatedTenantsRouteRouteWithChildren
  '/users': typeof AuthenticatedUsersRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/campaigns/': typeof AuthenticatedCampaignsIndexRoute
  '/offers/': typeof AuthenticatedOffersIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/tenants/': typeof AuthenticatedTenantsIndexRoute
  '/users/': typeof AuthenticatedUsersIndexRoute
}

export interface FileRoutesByTo {
  '/forgot-password': typeof authForgotPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/campaigns': typeof AuthenticatedCampaignsIndexRoute
  '/offers': typeof AuthenticatedOffersIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/tenants': typeof AuthenticatedTenantsIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/campaigns': typeof AuthenticatedCampaignsRouteRouteWithChildren
  '/_authenticated/offers': typeof AuthenticatedOffersRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/_authenticated/tenants': typeof AuthenticatedTenantsRouteRouteWithChildren
  '/_authenticated/users': typeof AuthenticatedUsersRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/campaigns/': typeof AuthenticatedCampaignsIndexRoute
  '/_authenticated/offers/': typeof AuthenticatedOffersIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/tenants/': typeof AuthenticatedTenantsIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/campaigns'
    | '/offers'
    | '/settings'
    | '/tenants'
    | '/users'
    | '/forgot-password'
    | '/sign-in'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/campaigns/'
    | '/offers/'
    | '/settings/'
    | '/tenants/'
    | '/users/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/sign-in'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/campaigns'
    | '/offers'
    | '/settings'
    | '/tenants'
    | '/users'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/campaigns'
    | '/_authenticated/offers'
    | '/_authenticated/settings'
    | '/_authenticated/tenants'
    | '/_authenticated/users'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/campaigns/'
    | '/_authenticated/offers/'
    | '/_authenticated/settings/'
    | '/_authenticated/tenants/'
    | '/_authenticated/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authSignInRoute: typeof authSignInRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authSignInRoute: authSignInRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/forgot-password",
        "/(auth)/sign-in",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/campaigns",
        "/_authenticated/offers",
        "/_authenticated/settings",
        "/_authenticated/tenants",
        "/_authenticated/users",
        "/_authenticated/"
      ]
    },
    "/_authenticated/campaigns": {
      "filePath": "_authenticated/campaigns/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/campaigns/"
      ]
    },
    "/_authenticated/offers": {
      "filePath": "_authenticated/offers/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/offers/"
      ]
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/_authenticated/tenants": {
      "filePath": "_authenticated/tenants/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/tenants/"
      ]
    },
    "/_authenticated/users": {
      "filePath": "_authenticated/users/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/users/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/campaigns/": {
      "filePath": "_authenticated/campaigns/index.tsx",
      "parent": "/_authenticated/campaigns"
    },
    "/_authenticated/offers/": {
      "filePath": "_authenticated/offers/index.tsx",
      "parent": "/_authenticated/offers"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/tenants/": {
      "filePath": "_authenticated/tenants/index.tsx",
      "parent": "/_authenticated/tenants"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.tsx",
      "parent": "/_authenticated/users"
    }
  }
}
ROUTE_MANIFEST_END */
